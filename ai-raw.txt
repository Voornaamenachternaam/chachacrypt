```diff
diff --git a/chachacrypt.go b/chachacrypt.go
--- a/chachacrypt.go
+++ b/chachacrypt.go
@@ -6,6 +6,8 @@
 	"io"
 	"log"
 	"os"
+	"path/filepath"
+	"math"
 )
 
 const (
@@ -48,6 +50,9 @@
 
 // NewConfig creates a new Config with default values and provided threads
 func NewConfig(threads int) (*Config, error) {
+	if threads < 0 || threads > 255 {
+		return nil, fmt.Errorf("threads must be between 0 and 255")
+	}
 	return &Config{
 		KeyMemory:  defaultKeyMemory,
 		KeyThreads: uint8(threads),
@@ -202,7 +207,7 @@
 		return err
 	}
 
-	inFile, err := os.Open(inputFile)
+	inFile, err := os.Open(filepath.Clean(inputFile))
 	if err != nil {
 		return err
 	}
@@ -211,7 +216,7 @@
 		return err
 	}
 
-	outFile, err := os.Create(outputFile)
+	outFile, err := os.Create(filepath.Clean(outputFile))
 	if err != nil {
 		return err
 	}
@@ -270,7 +275,7 @@
 		return err
 	}
 
-	inFile, err := os.Open(inputFile)
+	inFile, err := os.Open(filepath.Clean(inputFile))
 	if err != nil {
 		return err
 	}
@@ -279,7 +284,7 @@
 		return err
 	}
 
-	outFile, err := os.Create(outputFile)
+	outFile, err := os.Create(filepath.Clean(outputFile))
 	if err != nil {
 		return err
 	}
@@ -334,5 +339,8 @@
 	if err != nil && err != io.EOF {
 		return 0, err
 	}
+	if n < 0 || n > math.MaxUint32 {
+		return 0, fmt.Errorf("chunk size %d exceeds uint32 range", n)
+	}
 	return uint32(n), nil
 }
```
