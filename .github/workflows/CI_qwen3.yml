name: CI_qwen3

on:
  workflow_dispatch:
  schedule:
    - cron: '0 4 * * *'   # daily at 04:00 UTC (can be adjusted)

permissions:
  contents: write
  checks: write
  pull-requests: write

concurrency:
  group: ci-grok4
  cancel-in-progress: false

jobs:
  update-and-refactor:
    name: "Update dependencies & AI refactor (qwen3)"
    runs-on: ubuntu-latest
    env:
      API_URL: "https://openrouter.ai/api/v1/chat/completions"
      AI_MODEL: "qwen/qwen3-coder:free"
    steps:
      - uses: actions/checkout@v5
        with:
          token: ${{ secrets.GH2_TOKEN }}      # use GH2_TOKEN secret for all git operations:contentReference[oaicite:7]{index=7}:contentReference[oaicite:8]{index=8}
          fetch-depth: 0
          persist-credentials: true           # persist token in git config for subsequent pushes:contentReference[oaicite:9]{index=9}

      - name: Set up Go (stable)
        uses: actions/setup-go@v6       # installs a stable Go version and adds to PATH:contentReference[oaicite:10]{index=10}
        with:
          go-version: 'stable'

      - name: Clean go module cache (if needed)
        run: |
          go clean -modcache || true

      - name: Install golangci-lint (binary)
        uses: golangci/golangci-lint-action@v8   # use golangci-lint-action v8 with golangci-lint v2.x:contentReference[oaicite:12]{index=12}
        with:
          version: v2.5.0
          install-mode: binary

      - name: Run gitleaks scan (security)
        uses: gitleaks/gitleaks-action@v2.3.9
        with:
          args: detect --format json --report-path=gitleaks.json || true

      - name: Ensure ai_refactor script is executable
        run: chmod +x ./.github/scripts/ai_refactor.sh

      - name: Run automated updates + AI refactor
        id: run_refactor
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }} 
          GITHUB_TOKEN: ${{ secrets.GH2_TOKEN }}   # pass GH2_TOKEN as GITHUB_TOKEN for script:contentReference[oaicite:13]{index=13}
        run: |
          set -euo pipefail
          ./.github/scripts/ai_refactor.sh dependencies "${{ env.API_URL }}" "${{ env.AI_MODEL }}"

      - name: Run golangci-lint and save output
        run: |
          set -euo pipefail
          if golangci-lint run ./... 2>&1 | tee linter.log; then
            echo "golangci-lint completed without fatal error"
          else
            echo "golangci-lint finished (issues logged)" 
          fi

      - name: Upload AI artifacts
        if: always()
        uses: actions/upload-artifact@v4.6.2   # upload all AI request/response, patch, logs, diffs as a single artifact:contentReference[oaicite:14]{index=14}
        with:
          name: ci-grok4-artifacts
          path: |
            ai-request.json
            ai-response.json
            ai.patch
            tests.log
            linter.log
            pre-ai.diff
            push.log

      - name: Final status
        if: always()
        run: echo "CI_Grok4 completed. Check uploaded artifacts for AI logs and diffs."

