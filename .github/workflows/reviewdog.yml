name: reviewdog

permissions:
  actions: read
  checks: write
  contents: write
  deployments: write
  id-token: write
  issues: write
  discussions: write
  packages: write
  pages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:
  pull_request:

jobs:
  golangci-lint:
    name: runner / golangci-lint (reviewdog + SARIF v2.5.0)
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0

      - name: Run reviewdog (keep original behavior)
        uses: reviewdog/action-golangci-lint@v2.8.0
        with:
          golangci_lint_flags: "--fix"

      # Setup Go before using the official golangci-lint action (required for recent action versions)
      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: stable

      # Ensure directory for SARIF exists (golangci-lint won't create parent dirs)
      - name: Ensure reports directory exists
        run: mkdir -p reports

      # Run golangci-lint (official action) and write SARIF to reports/golangci.sarif
      - name: Generate SARIF with golangci-lint v2.5.0
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.5.0
          # Important: use '=' between flag name and value (action parses args by spaces).
          args: --output.sarif.path=reports/golangci.sarif
        continue-on-error: true

      # Upload SARIF to GitHub Code Scanning; use absolute path to avoid "Path does not exist"
      - name: Upload SARIF file to GitHub Code Scanning
        if: always()
        uses: github/codeql-action/upload-sarif@v4
        with:
          sarif_file: ${{ github.workspace }}/reports/golangc i.sarif
