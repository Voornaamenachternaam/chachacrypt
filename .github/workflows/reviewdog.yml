name: reviewdog (golangci → SARIF + artifact, reviewdog action)

permissions:
  contents: write
  checks: write
  pull-requests: write
  security-events: write
  statuses: write
  issues: write

on:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'

jobs:
  lint-and-upload:
    name: golangci-lint (v2.5.0) → SARIF → artifact → reviewdog (action v2.8.0)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0

      - name: Ensure reports dir exists
        run: mkdir -p reports

      # Run reviewdog/action-golangci-lint@v2.8.0 which will:
      #  - install golangci-lint v2.5.0
      #  - run golangci-lint with the provided flags
      #  - run reviewdog to post PR annotations
      # We pass flags so golangci-lint writes SARIF to reports/golangci.sarif
      - name: Run golangci-lint (via reviewdog action) — generate SARIF & annotate PR
        uses: reviewdog/action-golangci-lint@v2.8.0
        with:
          # pin golangci-lint to v2.5.0 (your requested version)
          golangci_lint_version: v2.5.0
          # instruct golangci-lint to write SARIF to reports/golangci.sarif
          # and print text to stdout for reviewdog to parse.
          # Note: flags follow golangci-lint v2 semantics (output.* flags).
          golangci_lint_flags: '--output.sarif.path=reports/golangci.sarif --output.text.path=stdout --fix'
          # ensure reviewdog posts a PR check (same as before)
          reporter: github-pr-check
          # do not use reviewdog action cache
          cache: false
          # set the reviewdog level / behavior if desired
          level: error
          # default GitHub token is used; explicit passed if you prefer:
          # github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Show reports directory & SARIF head (debug)
        run: |
          echo "PWD: $(pwd)"
          ls -la reports || true
          echo "---- head of SARIF ----"
          head -n 200 reports/golangci.sarif || true

      - name: Upload SARIF as GitHub Actions artifact
        if: always()
        uses: actions/upload-artifact@v5.0.0
        with:
          name: golangci-sarif
          path: reports/golangci.sarif

      - name: Upload SARIF to GitHub Code Scanning
        if: always()
        uses: github/codeql-action/upload-sarif@v4
        with:
          sarif_file: reports/golangci.sarif
          wait-for-processing: true
          token: ${{ secrets.GITHUB_TOKEN }}
