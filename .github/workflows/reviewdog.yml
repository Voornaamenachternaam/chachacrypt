name: reviewdog (golangci + SARIF)

permissions:
  actions: write
  checks: write
  contents: write
  deployments: write
  id-token: write
  issues: write
  discussions: write
  packages: write
  pages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:
  pull_request:

jobs:
  golangci-lint:
    name: runner / golangci-lint (reviewdog + SARIF v2.5.0, no cache)
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Make reports directory
        run: mkdir -p reports

      - name: Run golangci-lint (generate SARIF)
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.5.0
          # Request SARIF written to reports/golangci.sarif
          args: --output.sarif.path=reports/golangci.sarif
          install-mode: binary
          verify: true
          # --- disable cache restore/save in the golangci action:
          skip-cache: true
          skip-save-cache: true
        # keep the job going even if linters report issues (we still want SARIF uploaded)
        continue-on-error: true

      - name: Show reports directory (verify SARIF was created)
        run: |
          echo "PWD: $(pwd)"
          ls -la reports || true

      - name: Upload SARIF to GitHub code scanning
        uses: github/codeql-action/upload-sarif@v4
        with:
          # use relative path (no spaces, avoid long absolute expressions to prevent YAML wrapping)
          sarif_file: reports/golangci.sarif
          wait-for-processing: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Post reviewdog annotations to PR (optional)
        uses: reviewdog/action-golangci-lint@v2.8.0
        with:
          # Give reviewdog the same golangci-lint version
          golangci_lint_version: v2.5.0
          # If you want automatic fixes (same as your earlier run), keep --fix. Otherwise remove it.
          golangci_lint_flags: --fix
          # Do NOT use the cache
          cache: false
          # reporter you used earlier
          reporter: github-pr-check
          github_token: ${{ secrets.GITHUB_TOKEN }}
