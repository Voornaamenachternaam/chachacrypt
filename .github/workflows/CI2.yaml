name: "Go Toolchain Maintenance"

permissions:
  contents: write
  pull-requests: write

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:
  pull_request:
    types:
      - opened

jobs:
  bump:
    name: "Bump Go Version"
    runs-on: ubuntu-latest
    concurrency:
      group: "go-version-bump"
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Read current go.mod 'go' line
        id: current
        run: |
          echo "current_version=$(grep -Po '^go \K[\d.]+' go.mod)" >> $GITHUB_OUTPUT

      - name: Install latest Go 1.x
        id: setup_go
        uses: actions/setup-go@v5.5.0
        with:
          go-version: "1.x"
          check-latest: true

      - name: Capture exact Go version
        id: latest
        run: |
          version=$(go version | awk '{print $3}' | sed 's/^go//')
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Exit if already up-to-date
        if: ${{ steps.current.outputs.current_version == steps.latest.outputs.version }}
        run: |
          echo "go.mod is already at v${{ steps.latest.outputs.version }}; nothing to do."
          exit 0

      - name: Install Go ${{ steps.latest.outputs.version }}
        uses: actions/setup-go@v5.5.0
        with:
          go-version: ${{ steps.latest.outputs.version }}

      - name: Update go.mod 'go' directive
        run: go mod edit -go=${{ steps.latest.outputs.version }}

      - name: Apply automatic fixes & formatting
        run: |
          go fmt ./...
          go fix ./...

      - name: Tidy modules & vet
        run: |
          go mod tidy
          go vet ./...

      - name: Run tests
        run: go test ./... -timeout 5m

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7.0.8
        with:
          commit-message: "chore: bump Go to v${{ steps.latest.outputs.version }}"
          branch: "bump/go-${{ steps.latest.outputs.version }}"
          title: "chore: update Go version to v${{ steps.latest.outputs.version }}"
          body: |
            This PR bumps the Go version in go.mod to **v${{ steps.latest.outputs.version }}**
            
            - ran go fix & fmt  
            - verified tests pass
          labels: automated, dependencies
          reviewers: your-team/backend
          draft: false

  test-matrix:
    name: "Compatibility Matrix Tests"
    runs-on: ubuntu-latest
    concurrency:
      group: "go-compat-test-${{ matrix.go-version }}"
      cancel-in-progress: true
    strategy:
      matrix:
        go-version: ["1.23.x", "1.24.x", "1.25.x"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5.5.0
        with:
          go-version: ${{ matrix.go-version }}

      - name: Run tests
        run: go test ./... -timeout 5m

      - name: Tidy modules & vet
        run: |
          go mod tidy
          go vet ./...

      - name: Lint with golangci-lint
        uses: golangci/golangci-lint-action@v8.0.0
        with:
          version: v2.4.0
