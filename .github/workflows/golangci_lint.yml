name: golangci-lint
on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: write
  checks: write
  contents: write
  deployments: write
  id-token: write
  issues: write
  discussions: write
  packages: write
  pages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write

jobs:
  golangci:
    strategy:
      matrix:
        go: [stable]
        os: [ubuntu-latest, windows-latest]
    name: lint
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5.0.0

      - name: Setup Go
        uses: actions/setup-go@v6.0.0
        with:
          go-version: ${{ matrix.go }}

      # Install golangci-lint via the official action, but do not let a non-zero result stop the job.
      - name: Install golangci-lint (binary)
        uses: golangci/golangci-lint-action@v8.0.0
        with:
          version: v2.5.0
          install-mode: binary
        continue-on-error: true

      # Run the linter on Linux/macOS runners
      - name: Run golangci-lint (linux/mac)
        if: runner.os != 'Windows'
        id: run-golangci-linux
        continue-on-error: true
        shell: bash
        run: |
          set -euo pipefail || true
          mkdir -p artifacts
          cd "${GITHUB_WORKSPACE:-$PWD}"

          # run linter and capture outputs; do not let the command fail the step
          # write JSON output and both stdout/stderr files for later inspection
          if command -v golangci-lint >/dev/null 2>&1; then
            golangci-lint run --out-format json ./... > artifacts/golangci.json 2> artifacts/golangci.stderr || true
            golangci-lint --version > artifacts/golangci.version 2>&1 || true
          else
            echo "golangci-lint binary not found; installation may have failed" > artifacts/golangci.stderr
            echo "golangci-lint missing" > artifacts/golangci.version
          fi
          echo "ran_at=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" > artifacts/runinfo.txt || true

      # Run the linter on Windows runners (PowerShell)
      - name: Run golangci-lint (windows)
        if: runner.os == 'Windows'
        id: run-golangci-windows
        continue-on-error: true
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path artifacts -Force | Out-Null
          Set-Location -Path $Env:GITHUB_WORKSPACE

          if (Get-Command golangci-lint -ErrorAction SilentlyContinue) {
            & golangci-lint run --out-format json ./... > artifacts/golangci.json 2> artifacts/golangci.stderr || Write-Output "lint returned non-zero"
            & golangci-lint --version > artifacts/golangci.version 2>&1 || Write-Output "version check failed"
          } else {
            "golangci-lint binary not found; installation may have failed" | Out-File artifacts/golangci.stderr -Encoding utf8
            "golangci-lint missing" | Out-File artifacts/golangci.version -Encoding utf8
          }
          (Get-Date).ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ssZ") | Out-File -FilePath artifacts/runinfo.txt -Encoding ascii

      # Always upload the artifacts even if lint failed; keeps logs for review
      - name: Upload golangci-lint artifacts
        if: always()
        uses: actions/upload-artifact@v4.6.2
        with:
          name: golangci-lint-results-${{ matrix.os }}
          path: artifacts/
          retention-days: 90
