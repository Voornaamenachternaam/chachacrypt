name: golangci-lint
on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: write
  checks: write
  contents: write
  deployments: write
  id-token: write
  issues: write
  discussions: write
  packages: write
  pages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write

jobs:
  golangci:
    strategy:
      matrix:
        go: [stable]
        os: [ubuntu-latest, windows-latest]
    name: lint
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5.0.0

      - name: Setup Go
        uses: actions/setup-go@v6.0.0
        with:
          go-version: ${{ matrix.go }}

      - name: Install golangci-lint binary
        uses: golangci/golangci-lint-action@v8.0.0
        with:
          version: v2.5.0
          install-mode: binary
          verify: false
          args: --version

      - name: Run golangci-lint (capture output â€” do not fail)
        id: run-golangci
        continue-on-error: true
        shell: bash
        run: |
          set -euo pipefail

          # prepare artifacts dir
          mkdir -p artifacts

          # run golangci-lint v2+ with JSON output path (compatible with v2 flags)
          # capture stdout/stderr to files so we can upload them as artifacts
          # The command should not cause the step to fail the workflow because of 'continue-on-error: true'
          echo "Running golangci-lint..."
          # ensure we run against repository root
          cd "${{ github.workspace }}"

          # Run linter and capture outputs. Use new v2+ flags for JSON output and disable stats to keep JSON clean.
          # Redirect stdout/stderr to files; ensure the command does not break the step.
          golangci-lint run --output.json.path=artifacts/golangci.json --show-stats=false ./... > artifacts/golangci.stdout 2> artifacts/golangci.stderr || true

          # Also write a small summary exit-file for GitHub Actions consumption
          echo "exit_code=$?" > artifacts/exitcode.txt || true
          echo "ran_at=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" > artifacts/runinfo.txt || true

      - name: Upload golangci-lint artifacts
        if: always()
        uses: actions/upload-artifact@v4.6.2
        with:
          name: golangci-lint-results-${{ matrix.os }}
          path: artifacts/
          retention-days: 30
