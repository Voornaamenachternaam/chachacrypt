name: Codacy Security Scan

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: {}

jobs:
  codacy-security-scan:
    name: Run Codacy and split SARIF by run
    runs-on: ubuntu-latest
    outputs:
      # expose the JSON array of sarif filenames for the next job
      sarif_files: ${{ steps.split.outputs.sarif_files }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@master
        with:
          output: results.sarif
          format: sarif
          gh-code-scanning-compat: true
          max-allowed-issues: 2147483647

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - id: split
        name: Split SARIF into one file per run (if necessary)
        run: |
          # Fail if results.sarif doesn't exist
          if [ ! -f results.sarif ]; then
            echo "results.sarif not found"
            exit 1
          fi

          count=$(jq '.runs | length' results.sarif)
          echo "Found $count run(s) in results.sarif"

          if [ "$count" -le 1 ]; then
            # Single run â€” just upload original file
            echo "sarif_files=[\"results.sarif\"]" >> $GITHUB_OUTPUT
          else
            files_array="["
            for i in $(seq 0 $((count - 1))); do
              out="results.$i.sarif"
              # Copy top-level keys except runs, then set runs to the single run at index $i
              jq --argjson i "$i" '. as $orig | ($orig | del(.runs)) + { runs: [ $orig.runs[$i] ] }' results.sarif > "$out"
              files_array="${files_array}\"${out}\""
              if [ "$i" -lt $((count - 1)) ]; then
                files_array="${files_array},"
              fi
            done
            files_array="${files_array}]"
            echo "sarif_files=${files_array}" >> $GITHUB_OUTPUT
          fi
        shell: bash

  upload-sarifs:
    name: Upload SARIF files (one job per SARIF file)
    needs: codacy-security-scan
    runs-on: ubuntu-latest
    # create a matrix from the JSON array of filenames produced by the previous job
    strategy:
      matrix:
        sarif_file: ${{ fromJson(needs.codacy-security-scan.outputs.sarif_files) }}
    steps:
      - name: Checkout code (not strictly required for upload but kept for consistency)
        uses: actions/checkout@v5.0.0

      - name: Upload SARIF results file (${{ matrix.sarif_file }})
        uses: github/codeql-action/upload-sarif@main
        with:
          sarif_file: ${{ matrix.sarif_file }}
