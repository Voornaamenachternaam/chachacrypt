name: Update and Fix Go Modules

on:
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * 6"

permissions:
  issues: write
  pull-requests: write
  contents: write

jobs:
  discover-modules:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 1

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Discover all go.mod files
        id: set-matrix
        run: |
          # 2️⃣ Find every go.mod, strip "/go.mod" and "./" prefixes
          modules=$(find . -type f -name 'go.mod' \
            -not -path './vendor/*' \
            -not -path '*/.*/*' \
            | sed 's|/go.mod||' | sed 's|^\./||')

          # 3️⃣ Build compact JSON matrix {"module":[...]}
          json_matrix=$(printf '%s\n' "$modules" \
            | jq -R . | jq -s '{ module: . }' | jq -c .)

          echo "Discovered modules matrix: $json_matrix"
          # 4️⃣ Emit as single line
          echo "matrix=$json_matrix" >> $GITHUB_OUTPUT

  update-and-fix:
    needs: discover-modules
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ${{ fromJson(needs.discover-modules.outputs.matrix).module }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Go
        uses: actions/setup-go@v5.5.0
        with:
          go-version: '1.25.0'
          cache: true

      - name: Update Go version in go.mod
        working-directory: ${{ matrix.module }}
        run: go mod edit -go=1.25.0

      - name: Cache Go modules
        uses: actions/cache@v4.2.4
        with:
          path: |
            **/go.sum
            **/go.mod
            **/pkg/mod
          key: go-mod-${{ matrix.module }}-${{ hashFiles(format('{0}/go.sum', matrix.module)) }}

      - name: Update dependencies
        working-directory: ${{ matrix.module }}
        run: |
          go get -u ./...
          go mod tidy

      - name: AI compatibility fixes
        uses: dlidstrom/genai-code-review@v3.0.8
        continue-on-error: true
        with:
          args: compatibility --fix
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          openai_model: gpt-3.5-turbo
          openai_temperature: 0.5
          openai_max_tokens: 2048
          mode: files
          language: en

      - name: Commit & detect changes
        id: commit
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          if git diff --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            git add .
            git commit -m "chore: update deps & AI fixes for ${{ matrix.module }}"
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.commit.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v7.0.8
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "chore: update deps & AI fixes for ${{ matrix.module }}"
          body: Automated dependency updates and AI-driven compatibility fixes.
          commit-message: "chore: update deps & AI fixes for ${{ matrix.module }}"
          branch: update-fixes-${{ matrix.module }}-${{ github.run_number }}
          labels: automated-pr
